#!/bin/bash
# If you prefer a zsh keybinding check:
# https://github.com/gessen/zsh-fzf-kill/blob/master/fzf-kill.plugin.zsh
#
# FUTURE IMPROVEMENT: Loop mode, to keep killing until closing the window.
# FUTURE IMPROVEMENT: 'exclude' parameter to filter a list of 
#                     processes we wnow for a fact
#                     are system proceses (even though they are runned by the 
#                     user). dbus, pipewire, etc.

FZF_DEFAULT_OPTS="--min-height=100 --prompt 'kill -9 '"
EXTRACT_COLS_2_AND_8='{for(i=1;i<=NF;i++) if(i!=1 && i!=3 && i!=4 && i!=5 && i!=6 && i!=7) printf "%s ", $i; print ""}'


detailed_mode(){
  # Advanced mode (show subprocesses, if one is selected, parent is killed)
  if [[ "${UID}" != "0" ]]; then
    pid=$(ps -f -u ${UID} | \
      # Extract cols 2 and 8
      awk "$EXTRACT_COLS_2_AND_8" | \
      # Eliminate headers and started by this command.
      sed 1d | head -n -6 | \
      # pipe to fzf
      fzf -m | \
      # Store the user selection on the pid variable
      awk '{print $1}')
  else
    pid=$(ps -ef | \
      # Extract cols 2 and 8
      awk "$EXTRACT_COLS_2_AND_8" | \
      # Eliminate headers
      sed 1d | \
      # pipe to fzf
      fzf -m | \
      # Store the user selection on the pid variable
      awk '{print $1}')
  fi
  echo $pid
  if [[ "x$pid" != "x" ]]; then
    # Kill the process, no mater if child or parent is selected.
    ps -o ppid $pid | sed 1d | xargs kill "-${1:-9}" > /dev/null 2>&1
    kill -9 "$pid" > /dev/null 2>&1
  fi
}

simple_mode(){
  # Simple mode (We only list parent processes)
  # (Slower but more visually appealing).
  if [[ "${UID}" != "0" ]]; then
    # Extract running processes
    pid=$(ps -f -u ${UID} | \
      # Extract cols 2 and 8
      awk "$EXTRACT_COLS_2_AND_8" | \
      # Eliminate headers and started by this command.
      sed 1d  | \
      # De-duplicate entries
      awk '{if($2 in seen){}else{seen[$2]=$0; print}}' | \
      # Get parent process
      awk '{print $1}' | xargs echo | tr ' ' ',' | xargs -I{} sh -c 'ps -p {} -o pid=,comm=' | \
      # pipe to fzf
      awk '{print $1, $2}' | fzf -m | \
      # Store the user selection on the pid variable
      awk '{print $1}')
  else
    pid=$(ps -ef | \
      # Extract cols 2 and 8
      awk "$EXTRACT_COLS_2_AND_8" | \
      # Eliminate headers and started by this command.
      sed 1d | \
      # De-duplicate entries
      awk '{if($2 in seen){}else{seen[$2]=$0; print}}' | \
      # Get parent process
      awk '{print $1}' | xargs echo | tr ' ' ',' | xargs -I{} sh -c 'ps -p {} -o pid=,comm=' | \
      # pipe to fzf
      awk '{print $1, $2}' | fzf -m | \
      # Store the user selection on the pid variable
      awk '{print $1}')  
  fi

  if [[ "x$pid" != "x" ]]; then
    # Kill the parent process
    kill -9 "$pid" 2>&1
  fi
}

# Entry point of the program
if [ "$1" = "--help" ]; then
 echo "HELP:
 * --parents-only:    Show only parent processes. (default)
 * --all:             Show both parent and children processes.

ADVANCED:
 * To list both sudo and user processes, run it like:
   UID=0 fzf-kill 
 "
  exit 0
fi

if [ "$1" = "--all" ]; then
  detailed_mode
else
  simple_mode
fi
